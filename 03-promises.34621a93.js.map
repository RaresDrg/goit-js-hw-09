{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAWJ,SAASC,cAAc,mBAuBxC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,IAaxC,SAA6BC,GAC3BA,EACGC,MAAK,EAACN,SAAEA,EAAQC,MAAEA,MACjBM,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAqBT,QAAiBC,MAAU,IAEzES,OAAM,EAACV,SAAEA,EAAQC,MAAEA,MAClBM,EAAAhB,GAASiB,OAAOG,QAAQ,sBAAoBX,QAAeC,MAAU,G,CAVzEW,CAPgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLd,EAAeY,EAAQ,C,SAAEd,E,MAAUC,IAClCc,EAAO,C,SAAEf,E,MAAUC,GAAQ,GAC/BA,EAAM,I,CApBbR,EAAKwB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,gBAAEA,EAAeC,eAAEA,EAAcC,YAAEA,GAPlC,C,gBAHiBC,OAAO3B,EAAa4B,O,eACrBD,OAAO1B,EAAY2B,O,YACtBD,OAAOzB,EAAS0B,QAUpC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,IAAK,CAGpC1B,EADiB0B,EAAI,EADPL,EAAkBC,EAAiBI,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst delayStepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction getElValues() {\n  const firstDelayValue = Number(firstDelayEl.value);\n  const delayStepValue = Number(delayStepEl.value);\n  const amountValue = Number(amountEl.value);\n  return { firstDelayValue, delayStepValue, amountValue };\n}\n\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { firstDelayValue, delayStepValue, amountValue } = getElValues();\n\n  for (let i = 0; i < amountValue; i++) {\n    const delay = firstDelayValue + delayStepValue * i;\n    const position = i + 1;\n    createPromise(position, delay);\n  }\n});\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n  \n  handlePromiseResult(promise);\n}\n\n\nfunction handlePromiseResult(promise) {\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayEl","$47d4ff9957288465$var$delayStepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promise","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$handlePromiseResult","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelayValue","delayStepValue","amountValue","Number","value","i"],"version":3,"file":"03-promises.34621a93.js.map"}