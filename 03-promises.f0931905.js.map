{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAWJ,SAASC,cAAc,mBAuBxC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,IAaxC,SAA6BC,GAC3BA,EACGC,MAAK,SAAAC,G,IAAGP,EAAQO,EAARP,SAAUC,EAAKM,EAALN,MACjBO,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAEvEW,OAAM,SAAAL,G,IAAGP,EAAQO,EAARP,SAAUC,EAAKM,EAALN,MAClBO,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAVvEa,CAPgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLhB,EAAec,EAAQ,CAAEhB,WAAUC,UAClCgB,EAAO,CAAEjB,WAAUC,S,GACvBA,E,KApBPR,EAAK0B,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAIN,IAFA,IAAyDC,EAPlD,CAAEC,gBAHeC,OAAO5B,EAAa6B,OAGlBC,eAFHF,OAAO3B,EAAY4B,OAEAE,YADtBH,OAAO1B,EAAS2B,QAQ5BF,EAAiDD,EAAjDC,gBAAiBG,EAAgCJ,EAAhCI,eAAgBC,EAAgBL,EAAhBK,YAEhCC,EAAI,EAAGA,EAAID,EAAaC,IAAK,CAGpC7B,EADiB6B,EAAI,EADPL,EAAkBG,EAAiBE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst delayStepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction getElValues() {\n  const firstDelayValue = Number(firstDelayEl.value);\n  const delayStepValue = Number(delayStepEl.value);\n  const amountValue = Number(amountEl.value);\n  return { firstDelayValue, delayStepValue, amountValue };\n}\n\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { firstDelayValue, delayStepValue, amountValue } = getElValues();\n\n  for (let i = 0; i < amountValue; i++) {\n    const delay = firstDelayValue + delayStepValue * i;\n    const position = i + 1;\n    createPromise(position, delay);\n  }\n});\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n  \n  handlePromiseResult(promise);\n}\n\n\nfunction handlePromiseResult(promise) {\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","$ce04d3a99e08e73b$var$delayStepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$handlePromiseResult","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","ref","firstDelayValue","Number","value","delayStepValue","amountValue","i"],"version":3,"file":"03-promises.f0931905.js.map"}